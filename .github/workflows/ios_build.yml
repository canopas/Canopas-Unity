name: IOS Build

#on: workflow_dispatch
on: push

jobs:
  ios_build_ipa:
    runs-on: macos-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 17.0.6
          cache: 'gradle'


      - uses: subosito/flutter-action@v2
        name: Set up Flutter SDK
        with:
          flutter-version: 3.7.7
          channel: 'stable'
          cache: true

      - name: Retrieve the secret and decode it to a file
        env:
          DESKTOP_CREDENTIALS_BASE64: ${{ secrets.DESKTOP_CREDENTIALS_BASE64 }}
          FIREBASE_OPTIONS_BASE64: ${{ secrets.FIREBASE_OPTIONS_BASE64 }}
          GOOGLE_SERVICES_PLIST_IOS_BASE64: ${{ secrets.GOOGLE_SERVICES_PLIST_IOS_BASE64 }}

        run: |
          echo $DESKTOP_CREDENTIALS_BASE64 | base64 --decode > lib/desktop_credentials.dart
          echo $FIREBASE_OPTIONS_BASE64 | base64 --decode > lib/firebase_options.dart
          echo $GOOGLE_SERVICES_PLIST_IOS_BASE64 | base64 --decode > ios/Runner/GoogleService-Info.

      - name: Install distribution certificates
        env:
          $APPLE_DISTRIBUTION_CERT_N_KEY: ${{ secrets.APPLE_DISTRIBUTION_CERT_N_KEY }}
          $BUILD_KEY_CHAIN_PASS: ${{ secrets.BUILD_KEY_CHAIN_PASS }}
          $BUILD_KEY_CHAIN: ${{ secrets.BUILD_KEY_CHAIN }}
          $APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD }}
          $DIST_PROVISION_UUID: ${{ secrets.DIST_PROVISION_UUID }}
          $DIST_PROVISION: ${{ secrets.DIST_PROVISION }}
        run: |
          echo "create variable..."
           CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
           PP_PATH=$$RUNNER_TEMP/build_pp.mobileProvosion
           KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
           echo -n  $APPLE_DISTRIBUTION_CERT_N_KEY | base64 --decode > $CERTIFICATE_PATH
           echo -n "$DIST_PROVISION" | base64 --decode -o $PP_PATH
           echo "certificate retrieved"
          
           security create-keychain -p "$BUILD_KEY_CHAIN_PASS" $KEYCHAIN_PATH
           security set-keychain-settings -lut 1430 $KEYCHAIN_PATH
           security unlock-keychain -p "$BUILD_KEY_CHAIN_PASS" $KEYCHAIN_PATH
           echo "Keychain created"
          
           security import $CERTIFICATE_PATH -P "$APPLE_DISTRIBUTION_CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
           security list-keychain -d user -S $KEYCHAIN_PATH
          
          
           mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
           cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
           echo "JOb done"
      
      
      
      
      
      
      

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Archive and build iOS project
        run: |
          ARCHIVE_PATH="$Home/Library/Developer/Xcode/Archives/ProjectUnity/${{ github.sha }}/${{ github.job }}.xcarchive"
          xcodebuild -workspace ios/Runner.xcworkspace -scheme "Runner" clean archive -sdk iphoneos -archivePath $ARCHIVE_PATH | xcpretty --color    
          rm -rf $ARCHIVE_PATH
          echo "Build successfully"
