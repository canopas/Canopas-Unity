name: Android Build

on: push
#  push:
#    branches:
#      - main
#  workflow_dispatch:

jobs:

  android_build_apk:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: 17.0.6
          cache: 'gradle'


      - uses: subosito/flutter-action@v2
        name: Set up Flutter SDK
        with:
          channel: 'stable'
          cache: true

      - name: Retrieve the secret and decode it to a file
        env:
          DESKTOP_CREDENTIALS_BASE64: ${{ secrets.DESKTOP_CREDENTIALS_BASE64 }}
          FIREBASE_OPTIONS_BASE64: ${{ secrets.FIREBASE_OPTIONS_BASE64 }}
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}
        run: .github/script/install_secret_script.sh

      - name: Generate build
        run: |
          file='VERSION'
          fileData=`cat $file`
          IFS='.'
          read -a versionValue <<< "$fileData"
          buildNumber=$(( ${versionValue[0]} * 1000000 + ${versionValue[1]} * 10000 + ${{ github.run_number }} ))
          IFS=''
          buildName="${versionValue[0]}.${versionValue[1]}.${{ github.run_number }}"
          echo "Generating android build $buildName $buildNumber"
          echo $APKSIGN_KEYSTORE_BASE64 | base64 -di > release.jks
          export APKSIGN_KEYSTORE=`pwd`/release.jks
          flutter build apk --release --build-number=$buildNumber --build-name=$buildName
          mv build/app/outputs/apk/release/*.apk .
        env:
          APKSIGN_KEYSTORE_BASE64: ${{ secrets.APKSIGN_KEYSTORE_BASE64 }}
          APKSIGN_KEYSTORE_PASS: ${{ secrets.APKSIGN_KEYSTORE_PASS }}
          APKSIGN_KEY_ALIAS: ${{ secrets.APKSIGN_KEY_ALIAS }}
          APKSIGN_KEY_PASS: ${{ secrets.APKSIGN_KEY_PASS }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ProjectUnity APK
          path: ProjectUnity*.apk
          retention-days: 2


  android_build_aab:
    runs-on: ubuntu-latest
    needs: android_build_apk
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: 17.0.6
          cache: 'gradle'


      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Retrieve the secret and decode it to a file
        env:
          DESKTOP_CREDENTIALS_BASE64: ${{ secrets.DESKTOP_CREDENTIALS_BASE64 }}
          FIREBASE_OPTIONS_BASE64: ${{ secrets.FIREBASE_OPTIONS_BASE64 }}
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}
        run: .github/script/install_secret_script.sh

      - name: Generate build
        run: |
          file='VERSION'
          fileData=`cat $file`
          IFS='.'
          read -a versionValue <<< "$fileData"
          buildNumber=$(( ${versionValue[0]} * 1000000 + ${versionValue[1]} * 10000 + ${{ github.run_number }} ))
          IFS=''
          buildName="${versionValue[0]}.${versionValue[1]}.${{ github.run_number }}"
          echo "Generating android build $buildName $buildNumber"
          echo $APKSIGN_KEYSTORE_BASE64 | base64 -di > release.jks
          export APKSIGN_KEYSTORE=`pwd`/release.jks
          flutter build appbundle --build-number=$buildNumber --build-name=$buildName
          mv build/app/outputs/bundle/release/app-release.aab .
        env:
          APKSIGN_KEYSTORE_BASE64: ${{ secrets.APKSIGN_KEYSTORE_BASE64 }}
          APKSIGN_KEYSTORE_PASS: ${{ secrets.APKSIGN_KEYSTORE_PASS }}
          APKSIGN_KEY_ALIAS: ${{ secrets.APKSIGN_KEY_ALIAS }}
          APKSIGN_KEY_PASS: ${{ secrets.APKSIGN_KEY_PASS }}

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ProjectUnity AAB
          path: app-release.aab
          retention-days: 2