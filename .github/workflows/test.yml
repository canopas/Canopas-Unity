name: Run Tests

#on: push
on: workflow_dispatch


jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          cache: 'gradle'


      - uses: subosito/flutter-action@v2
        name: Set up Flutter SDK
        with:
          flutter-version: 3.7.7
          channel: 'stable'
          cache: true

      - name: Retrieve the secret and decode it to a file
        env:
          DESKTOP_CREDENTIALS_BASE64: ${{ secrets.DESKTOP_CREDENTIALS_BASE64 }}
          FIREBASE_OPTIONS_BASE64: ${{ secrets.FIREBASE_OPTIONS_BASE64 }}
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}
          GOOGLE_SERVICES_PLIST_IOS_BASE64: ${{ secrets.GOOGLE_SERVICES_PLIST_IOS_BASE64 }}
          GOOGLE_SERVICES_PLIST_MACOS_BASE64: ${{ secrets.GOOGLE_SERVICES_PLIST_MACOS_BASE64 }}
          WEB_INDEX_HTML_BASE64: ${{ secrets.WEB_INDEX_HTML_BASE64 }}

        run: |
          echo $DESKTOP_CREDENTIALS_BASE64 | base64 -di > lib/desktop_credentials.dart
          echo $FIREBASE_OPTIONS_BASE64 | base64 -di > lib/firebase_options.dart
          echo $GOOGLE_SERVICES_JSON_BASE64 | base64 -di > android/app/google-services.json
          echo $GOOGLE_SERVICES_PLIST_IOS_BASE64 | base64 -di > ios/Runner/GoogleService-Info.plist
          echo $GOOGLE_SERVICES_PLIST_MACOS_BASE64 | base64 -di > macos/Runner/GoogleService-Info.plist
          echo $WEB_INDEX_HTML_BASE64 | base64 -di > web/index.html


      - name: Run lints test
        run: |
          flutter clean
          flutter pub get
          dart analyze --fatal-infos

      - name: Run Unit test
        run: flutter test

          #                    cd $HOME
          #                    sudo apt-get update
          #                    sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libxml2-dev libxslt1-dev libcurl4-openssl-dev libffi-dev
          #
          #                    git clone https://github.com/rbenv/rbenv.git ~/.rbenv
          #                    echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
          #                    echo 'eval "$(rbenv init -)"' >> ~/.bashrc
          #                    exec $SHELL
          #
          #                    git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
          #                    echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
          #                    exec $SHELL
          #
          #                    rbenv install 2.3.1
          #                    rbenv global 2.3.1
        #                    ruby -v
        #                    gem install bundler
        #                    rbenv rehash