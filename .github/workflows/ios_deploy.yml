name: iOS build

on: push



jobs:
  ios_deploy_testflight:
    runs-on: macos-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE }}
        DIST_PROVISION_UUID: ${{ secrets.DIST_PROVISION_UUID }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      run: |
        # create variables  
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        
        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode > $CERTIFICATE_PATH
        
        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
        # Install distribution certificate
        chmod +x ios/install_dist_profile.sh && ./ios/install_dist_profile.sh

    - name: Set up Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: |
        flutter pub get

    - name: Building ipa
      run: |
        file='VERSION'
        fileData=`cat $file`
        IFS='.'
        read -a versionValue <<< "$fileData"
        buildNumber=$(( ${versionValue[0]} * 1000000 + ${versionValue[1]} * 10000 + ${{ github.run_number }} ))
        IFS=''
        buildName="${versionValue[0]}.${versionValue[1]}.${{ github.run_number }}"
        echo "Uploading build $buildName"
        flutter build ipa --build-number=$buildNumber --build-name=$buildName --export-options-plist=ios/Runner/ExportOptions.plist
        echo "Uploading app to iTC..."
        xcrun altool --upload-app -t ios -f build/ios/ipa/*.ipa -u $ITC_USER_NAME -p $ITC_USER_PASSWORD
        
    - name: Clean up keychain and provisioning profile
      if: ${{ always() }}
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
