// Mocks generated by Mockito 5.4.4 from annotations
// in projectunity/test/unit_test/user/forms/user_form_list/user_form_list_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:projectunity/data/model/org_forms/org_form_info/org_form_info.dart'
    as _i6;
import 'package:projectunity/data/model/org_forms/org_form_response/org_form_response.dart'
    as _i7;
import 'package:projectunity/data/model/org_forms/org_forms.dart' as _i5;
import 'package:projectunity/data/repo/form_repo.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FormRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockFormRepo extends _i1.Mock implements _i2.FormRepo {
  MockFormRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String generateNewFormId() => (super.noSuchMethod(
        Invocation.method(
          #generateNewFormId,
          [],
        ),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.method(
            #generateNewFormId,
            [],
          ),
        ),
      ) as String);

  @override
  String generateNewFormFieldId({required String? formId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateNewFormFieldId,
          [],
          {#formId: formId},
        ),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.method(
            #generateNewFormFieldId,
            [],
            {#formId: formId},
          ),
        ),
      ) as String);

  @override
  _i4.Future<void> createForm({required _i5.OrgForm? orgForm}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createForm,
          [],
          {#orgForm: orgForm},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i6.OrgFormInfo>> getForms() => (super.noSuchMethod(
        Invocation.method(
          #getForms,
          [],
        ),
        returnValue:
            _i4.Future<List<_i6.OrgFormInfo>>.value(<_i6.OrgFormInfo>[]),
      ) as _i4.Future<List<_i6.OrgFormInfo>>);

  @override
  _i4.Future<_i6.OrgFormInfo?> getFormInfo({required String? formId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFormInfo,
          [],
          {#formId: formId},
        ),
        returnValue: _i4.Future<_i6.OrgFormInfo?>.value(),
      ) as _i4.Future<_i6.OrgFormInfo?>);

  @override
  _i4.Future<_i5.OrgForm?> getForm({required String? formId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getForm,
          [],
          {#formId: formId},
        ),
        returnValue: _i4.Future<_i5.OrgForm?>.value(),
      ) as _i4.Future<_i5.OrgForm?>);

  @override
  _i4.Future<List<_i7.OrgFormResponse>> getFormResponse(
          {required String? formId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFormResponse,
          [],
          {#formId: formId},
        ),
        returnValue: _i4.Future<List<_i7.OrgFormResponse>>.value(
            <_i7.OrgFormResponse>[]),
      ) as _i4.Future<List<_i7.OrgFormResponse>>);
}
